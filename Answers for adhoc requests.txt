/* REQUEST 1

Provide the list of markets in which customer "Atliq Exclusive" operates its
business in the APAC region.
*/

select distinct(c.market) ,m.region from dim_customer c
join dim_market m
on c.market=m.market where region="APAC";

/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST2

What is the percentage of unique product increase in 2021 vs. 2020? The
final output contains these fields,
unique_products_2020
unique_products_2021
percentage_chg*/

WITH CTE AS
(
select * from (select count(distinct product) as unique_products_2020 from fact_sales_monthly m
join dim_date d
on m.date=d.calender_date
where FY=2020) as a,

( select count(distinct product) as unique_products_2021 from fact_sales_monthly m
join dim_date d
on m.date=d.calender_date
where FY=2021 ) as b
)
select *, round(((unique_products_2021-unique_products_2020) /unique_products_2020 )*100,2) as per_change from CTE;
/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST 3
Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains
2 fields,
segment
product_count*/

select  segment, count(distinct product) as cnt
from dim_product
GROUP BY segment
ORDER BY count(distinct product) DESC;

/*----------------------------------------------------------------------------------------------------------*/

/*REQUEST 4

Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
segment
product_count_2020
product_count_2021
difference*/

with CTE1 AS
(select segment as s1,count(DISTINCT m.product_code) as product_count_2021 from fact_sales_monthly m
join dim_product dp
on m.product_code=dp.product_code
WHERE FY=2021
group by segment),
CTE2 AS
((select segment as s2, count(DISTINCT m.product_code) as product_count_2020 from fact_sales_monthly m
join dim_product dp
on m.product_code=dp.product_code
WHERE FY=2020
group by segment)
)
SELECT CTE1.s1,CTE2.product_count_2020, CTE1.product_count_2021 ,
(CTE1.product_count_2021-CTE2.product_count_2020) as diff FROM CTE1,CTE2
WHERE CTE1.s1=CTE2.s2;
/*----------------------------------------------------------------------------------------------------------*/


/* Request 5
Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost
*/
select dp.product_code,dp.product, mc.manufacturing_cost from dim_product dp
join fact_manufacturing_cost mc
on dp.product_code=mc.product_code

WHERE mc.manufacturing_cost IN(select MIN(manufacturing_cost) FROM fact_manufacturing_cost UNION
select MAX(manufacturing_cost) FROM fact_manufacturing_cost);

/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST 6
Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage
*/
select dc.customer_code,dc. customer, pd.pre_invoice_discount_pct from dim_customer dc
join fact_pre_invoice_deductions pd
on dc.customer_code=pd.customer_code where pd.fiscal_year=2021 and market='India'
order by pd.pre_invoice_discount_pct DESC LIMIT 5;

/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST 7
Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount
*/

select   monthname(date) as Month ,FY as Year, round(sum(sold_quantity* gross_price),2) as Gross_sales_amt from fact_sales_monthly sm
join fact_gross_price gp
on sm.product_code=gp.product_code and sm.FY=gp.fiscal_year
join dim_customer dm
on sm.customer_code=dm.customer_code
where dm.customer="Atliq Exclusive"
group by date;


/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST 8
In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity
*/
select 
case 
WHEN month(date) in (9,10,11) THEN "Q1"
WHEN month(date) in (12,1,2) THEN "Q2"
WHEN month(date) in (3,4,5) THEN "Q3"
ELSE "Q4"
END as qtr,
sum(sold_quantity) as total_sold_qty

from fact_sales_monthly
WHERE FY=2020
GROUP BY qtr;

/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST 9
Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage
*/
with cte as
(
select channel,round (sum(sold_quantity*gross_price)/1000000 ,2)as gross_price_million
 from fact_sales_monthly sm
join fact_gross_price gp
on sm.product_code=gp.product_code and sm.FY=gp.fiscal_year
join dim_customer dc
on sm.customer_code=dc.customer_code
group by channel)

select channel,gross_price_million, round(gross_price_million*100/sum(gross_price_million) over(),2)as pct from cte ;

/*----------------------------------------------------------------------------------------------------------*/

/* REQUEST 10
Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
The final output contains these fields,
division
product_code
product
total_sold_quantity
rank_order
*/
with CTE as
(

SELECT division, dp.product_code, dp.product, sum(sold_quantity) as total_sold_qty,

dense_rank() over(partition by division order by sum(sold_quantity) DESC) as rnk FROM dim_product dp
join fact_sales_monthly sm
on 
dp.product_code=sm.product_code
group by division,product_code,product)
SELECT * from CTE where rnk<=3;


